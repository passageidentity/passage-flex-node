/* tslint:disable */
/* eslint-disable */
/**
 * Passage Management API
 * Passage\'s management API to manage your Passage apps and users.
 *
 * The version of the OpenAPI document: 1
 * Contact: support@passage.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RegisterTransactionArgs
 */
export interface RegisterTransactionArgs {
    /**
     * the user's unique identifier
     * @type {string}
     * @memberof RegisterTransactionArgs
     */
    externalId: string;
    /**
     * the immutable display name of the passkey that the user will see
     * @type {string}
     * @memberof RegisterTransactionArgs
     */
    passkeyDisplayName: string;
}

/**
 * Check if a given object implements the RegisterTransactionArgs interface.
 */
export function instanceOfRegisterTransactionArgs(value: object): value is RegisterTransactionArgs {
    if (!('externalId' in value) || value['externalId'] === undefined) return false;
    if (!('passkeyDisplayName' in value) || value['passkeyDisplayName'] === undefined) return false;
    return true;
}

export function RegisterTransactionArgsFromJSON(json: any): RegisterTransactionArgs {
    return RegisterTransactionArgsFromJSONTyped(json, false);
}

export function RegisterTransactionArgsFromJSONTyped(json: any, ignoreDiscriminator: boolean): RegisterTransactionArgs {
    if (json == null) {
        return json;
    }
    return {
        
        'externalId': json['external_id'],
        'passkeyDisplayName': json['passkey_display_name'],
    };
}

export function RegisterTransactionArgsToJSON(json: any): RegisterTransactionArgs {
    return RegisterTransactionArgsToJSONTyped(json, false);
}

export function RegisterTransactionArgsToJSONTyped(value?: RegisterTransactionArgs | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'external_id': value['externalId'],
        'passkey_display_name': value['passkeyDisplayName'],
    };
}

